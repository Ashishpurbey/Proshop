{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST } from '../constants/productConstants';\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/ashish/Desktop/PROSHOP/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_REQUEST","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_REQUEST","listProducts","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","deleteProduct","getState","userLogin","userInfo","config","headers","Authorization","token"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n    PRODUCT_LIST_SUCCESS,PRODUCT_LIST_REQUEST,PRODUCT_LIST_FAIL, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST,PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_REQUEST,\n} from '../constants/productConstants'\n\nexport const listProducts = () => async(dispatch)=>{\n    try {\n        dispatch({type:PRODUCT_LIST_REQUEST})\n            const {data} = await axios.get('/api/products')\n            dispatch({\n            type:PRODUCT_LIST_SUCCESS,\n            payload:data,\n        })\n    } catch (error) {\n        \n        dispatch({\n            type:PRODUCT_LIST_FAIL,\n            payload:\n            error.response && error.response.data.message\n            ?error.response.data.message\n            :error.message,\n        })\n    }\n}\n \nexport const listProductDetails = (id) => async(dispatch)=>{\n    try {\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\n            const {data} = await axios.get(`/api/products/${id}`)\n            dispatch({\n            type:PRODUCT_DETAILS_SUCCESS,\n            payload:data,\n        })\n    } catch (error) {\n        \n        dispatch({\n            type:PRODUCT_DETAILS_FAIL,\n            payload:\n            error.response && error.response.data.message\n            ?error.response.data.message\n            :error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = () => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_DELETE_REQUEST,\n      })\n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n      const { data } = await axios.get(`/api/orders/myorders` ,config)\n     \n      dispatch({\n        type: PRODUCT_DELETE_SUCCESS,\n        payload: data,\n      })\n    } catch (error) { \n      dispatch({\n        type: PRODUCT_DELETE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n  "]},"metadata":{},"sourceType":"module"}