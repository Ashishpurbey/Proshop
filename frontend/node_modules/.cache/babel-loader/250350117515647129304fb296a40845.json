{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducer/productReducers';\nimport { cartReducer } from './reducer/cartReducers';\nimport { userUpdateProfileReducer, userDetailsReducer, userLoginReducer, userRegisterReducer } from './reducer/userReducer';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducer/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMyList: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/ashish/Desktop/PROSHOP/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userUpdateProfileReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderMyList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,2BAHP;AAIA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,wBADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,mBAJF,QAKO,uBALP;AAMA,SAAQC,kBAAR,EAA4BC,mBAA5B,EAAgDC,eAAhD,EAAgEC,kBAAhE,QAA0F,yBAA1F;AAGA,MAAMC,OAAO,GAAGf,eAAe,CAAC;AAC9BgB,EAAAA,WAAW,EAAEZ,kBADiB;AAE9Ba,EAAAA,cAAc,EAAEZ,qBAFc;AAG9Ba,EAAAA,IAAI,EAAEZ,WAHwB;AAI9Ba,EAAAA,SAAS,EAAEV,gBAJmB;AAK9BW,EAAAA,YAAY,EAAEV,mBALgB;AAM9BW,EAAAA,WAAW,EAAEb,kBANiB;AAO9Bc,EAAAA,iBAAiB,EAAEf,wBAPW;AAQ9BgB,EAAAA,WAAW,EAACZ,kBARkB;AAS9Ba,EAAAA,YAAY,EAACZ,mBATiB;AAU9Ba,EAAAA,QAAQ,EAACZ,eAVqB;AAW9Ba,EAAAA,WAAW,EAACZ;AAXkB,CAAD,CAA/B;AAeA,MAAMa,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBhB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBd,EAAAA,SAAS,EAAE;AAAEkB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAOA,MAAMM,UAAU,GAAG,CAACpC,KAAD,CAAnB;AACA,MAAMqC,KAAK,GAAGxC,WAAW,CACvBgB,OADuB,EAEvBmB,YAFuB,EAGvB/B,mBAAmB,CAACF,eAAe,CAAC,GAAGqC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from './reducer/productReducers'\nimport { cartReducer } from './reducer/cartReducers'\nimport {\n  userUpdateProfileReducer,\n  userDetailsReducer,\n  userLoginReducer,\n  userRegisterReducer,\n} from './reducer/userReducer'\nimport {orderCreateReducer, orderDetailsReducer,orderPayReducer,orderListMyReducer}  from './reducer/orderReducers'\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate:orderCreateReducer,\n  orderDetails:orderDetailsReducer,\n  orderPay:orderPayReducer,\n  orderMyList:orderListMyReducer\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\nconst middleware = [thunk]\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}