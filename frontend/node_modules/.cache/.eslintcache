[{"/home/ashish/Desktop/PROSHOP/frontend/src/index.js":"1","/home/ashish/Desktop/PROSHOP/frontend/src/App.js":"2","/home/ashish/Desktop/PROSHOP/frontend/src/reportWebVitals.js":"3","/home/ashish/Desktop/PROSHOP/frontend/src/components/Header.js":"4","/home/ashish/Desktop/PROSHOP/frontend/src/components/Footer.js":"5","/home/ashish/Desktop/PROSHOP/frontend/src/screens/HomeScreen.js":"6","/home/ashish/Desktop/PROSHOP/frontend/src/components/Product.js":"7","/home/ashish/Desktop/PROSHOP/frontend/src/components/Rating.js":"8","/home/ashish/Desktop/PROSHOP/frontend/src/screens/ProductScreen.js":"9","/home/ashish/Desktop/PROSHOP/frontend/src/store.js":"10","/home/ashish/Desktop/PROSHOP/frontend/src/reducer/productReducers.js":"11","/home/ashish/Desktop/PROSHOP/frontend/src/constants/productConstants.js":"12","/home/ashish/Desktop/PROSHOP/frontend/src/actions/productActions.js":"13","/home/ashish/Desktop/PROSHOP/frontend/src/components/Message.js":"14","/home/ashish/Desktop/PROSHOP/frontend/src/components/Loader.js":"15","/home/ashish/Desktop/PROSHOP/frontend/src/reducer/cartReducers.js":"16","/home/ashish/Desktop/PROSHOP/frontend/src/actions/cartActions.js":"17","/home/ashish/Desktop/PROSHOP/frontend/src/screens/CartScreen.js":"18","/home/ashish/Desktop/PROSHOP/frontend/src/constants/cartConstants.js":"19","/home/ashish/Desktop/PROSHOP/frontend/src/constants/userConstants.js":"20","/home/ashish/Desktop/PROSHOP/frontend/src/screens/LoginScreeen.js":"21","/home/ashish/Desktop/PROSHOP/frontend/src/components/FormContainer.js":"22","/home/ashish/Desktop/PROSHOP/frontend/src/actions/userActions.js":"23","/home/ashish/Desktop/PROSHOP/frontend/src/screens/RegisterScreen.js":"24","/home/ashish/Desktop/PROSHOP/frontend/src/reducer/userReducer.js":"25","/home/ashish/Desktop/PROSHOP/frontend/src/screens/ProfileScreen.js":"26","/home/ashish/Desktop/PROSHOP/frontend/src/screens/ShippingScreen.js":"27","/home/ashish/Desktop/PROSHOP/frontend/src/components/CheckoutSteps.js":"28","/home/ashish/Desktop/PROSHOP/frontend/src/screens/PaymentScreen.js":"29","/home/ashish/Desktop/PROSHOP/frontend/src/screens/PlaceOrderScreen.js":"30","/home/ashish/Desktop/PROSHOP/frontend/src/reducer/orderReducers.js":"31","/home/ashish/Desktop/PROSHOP/frontend/src/constants/orderConstants.js":"32","/home/ashish/Desktop/PROSHOP/frontend/src/actions/orderActions.js":"33","/home/ashish/Desktop/PROSHOP/frontend/src/screens/OrderScreen.js":"34"},{"size":375,"mtime":1619521218688,"results":"35","hashOfConfig":"36"},{"size":1561,"mtime":1619892606672,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1618995635280,"results":"38","hashOfConfig":"36"},{"size":2092,"mtime":1619774421902,"results":"39","hashOfConfig":"36"},{"size":345,"mtime":1619015746832,"results":"40","hashOfConfig":"36"},{"size":1078,"mtime":1619521203656,"results":"41","hashOfConfig":"36"},{"size":939,"mtime":1619082624920,"results":"42","hashOfConfig":"36"},{"size":2264,"mtime":1619080522305,"results":"43","hashOfConfig":"36"},{"size":3691,"mtime":1619542255733,"results":"44","hashOfConfig":"36"},{"size":1638,"mtime":1619940939259,"results":"45","hashOfConfig":"36"},{"size":1130,"mtime":1619521166626,"results":"46","hashOfConfig":"36"},{"size":361,"mtime":1619454525787,"results":"47","hashOfConfig":"36"},{"size":1277,"mtime":1619438993510,"results":"48","hashOfConfig":"36"},{"size":286,"mtime":1619437559803,"results":"49","hashOfConfig":"36"},{"size":329,"mtime":1619437104825,"results":"50","hashOfConfig":"36"},{"size":1141,"mtime":1619856474715,"results":"51","hashOfConfig":"36"},{"size":1177,"mtime":1619856391519,"results":"52","hashOfConfig":"36"},{"size":3311,"mtime":1619621689583,"results":"53","hashOfConfig":"36"},{"size":233,"mtime":1619856281175,"results":"54","hashOfConfig":"36"},{"size":833,"mtime":1619798719645,"results":"55","hashOfConfig":"36"},{"size":2186,"mtime":1619853310082,"results":"56","hashOfConfig":"36"},{"size":376,"mtime":1619759698278,"results":"57","hashOfConfig":"36"},{"size":3401,"mtime":1619851507352,"results":"58","hashOfConfig":"36"},{"size":3076,"mtime":1619851519356,"results":"59","hashOfConfig":"36"},{"size":2138,"mtime":1619851499544,"results":"60","hashOfConfig":"36"},{"size":3398,"mtime":1619851523284,"results":"61","hashOfConfig":"36"},{"size":2515,"mtime":1619855046194,"results":"62","hashOfConfig":"36"},{"size":1550,"mtime":1619854922272,"results":"63","hashOfConfig":"36"},{"size":1825,"mtime":1619858251148,"results":"64","hashOfConfig":"36"},{"size":5972,"mtime":1619892832813,"results":"65","hashOfConfig":"36"},{"size":1959,"mtime":1619946974790,"results":"66","hashOfConfig":"36"},{"size":552,"mtime":1619938377438,"results":"67","hashOfConfig":"36"},{"size":2420,"mtime":1619941359162,"results":"68","hashOfConfig":"36"},{"size":6513,"mtime":1619947333252,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"nzr4p5",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ashish/Desktop/PROSHOP/frontend/src/index.js",[],["150","151"],"/home/ashish/Desktop/PROSHOP/frontend/src/App.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/reportWebVitals.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/components/Header.js",["152","153","154","155","156"],"import React from 'react'\nimport {useDispatch,useSelector} from 'react-redux'\nimport {Container,Row,Col } from 'react-bootstrap'\nimport {Nav,Navbar,NavDropdown,Button,Form,FormControl  } from 'react-bootstrap'\nimport './Header.css'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {logout} from '../actions/userActions'\n\n\nconst Header = () => {\n     const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const logoutHandler = ()=>{\n        dispatch(logout());\n    }\n    return (\n        <header>\n           <Navbar className=\"ash\" bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand href=\"/\">ProShop</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                        <LinkContainer to='/cart'>\n                            <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\n                        </LinkContainer>\n                        {userInfo ? (\n                            <NavDropdown title={userInfo.name} id='username'>\n                                <LinkContainer to='/profile'>\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                             \n                            </NavDropdown>\n                        ):(<LinkContainer to='/login'>\n                            <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\n                        </LinkContainer>)}\n                            \n                        </Nav> \n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","/home/ashish/Desktop/PROSHOP/frontend/src/components/Footer.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/screens/HomeScreen.js",["157"],"import React, { useState, useEffect } from 'react'\n// import products from '../products'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\n// import axios from 'axios'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products } = productList\n  useEffect(() => {\n    dispatch(listProducts())\n  }, [dispatch])\n\n  return (\n    <>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","/home/ashish/Desktop/PROSHOP/frontend/src/components/Product.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/components/Rating.js",["158"],"import React from 'react'\nimport { propTypes } from 'react-bootstrap/esm/Image'\nimport PropTypes from 'prop-types'\n\nconst Rating = ({value,text,color}) => {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i\n                    style={{color:color}}\n                    className={\n                    value >=1\n                      ?'fas fa-star'\n                      :value >= 0.5\n                      ?'fas fa-star-half-alt'\n                      :'far fa-star'\n                }>\n                </i>\n            </span>\n            <span>\n                <i  \n                    style={{color:color}}\n                    className={\n                    value >=2\n                      ?'fas fa-star'\n                      :value >= 1.5\n                      ?'fas fa-star-half-alt'\n                      :'far fa-star'\n                }>\n                </i>\n            </span>\n            <span>\n                <i  \n                    style={{color:color}}\n                    className={\n                    value >=3\n                      ?'fas fa-star'\n                      :value >= 2.5\n                      ?'fas fa-star-half-alt'\n                      :'far fa-star'\n                }>\n                </i>\n            </span>\n            <span>\n                <i \n                    style={{color:color}}\n                    className={\n                    value >=4\n                      ?'fas fa-star'\n                      :value >= 3.5\n                      ?'fas fa-star-half-alt'\n                      :'far fa-star'\n                }>\n                </i>\n            </span>\n            <span>\n                <i \n                    style={{color:color}}\n                     className={\n                      value >=5\n                      ?'fas fa-star'\n                      :value >= 4.5\n                      ?'fas fa-star-half-alt'\n                      :'far fa-star'\n                }>\n                </i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nRating.defaultProps= {\n    color:'#f8e825',\n}\n\nRating.propTypes ={\n    value:PropTypes.number.isRequired,\n    text:PropTypes.string.isRequired,\n    color:PropTypes.string,\n}\n\n\nexport default Rating\n","/home/ashish/Desktop/PROSHOP/frontend/src/screens/ProductScreen.js",["159"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductDetails } from '../actions/productActions'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const dispatch = useDispatch()\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id))\n  }, [dispatch, match])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          <Col md={5}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={4}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>price: ${product.price}</ListGroup.Item>\n              <ListGroup.Item>\n                Description: {product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>${product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col>\n                        <Form.Control\n                          as='select'\n                          value={qty}\n                          onChange={(e) => setQty(e.target.value)}\n                        >\n                          {[...Array(product.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                  <Button\n                    onClick={addToCartHandler}\n                    className='btn-block '\n                    type='button'\n                    disabled={product.countInStock == 0}\n                  >\n                    Add To Cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","/home/ashish/Desktop/PROSHOP/frontend/src/store.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/reducer/productReducers.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/constants/productConstants.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/actions/productActions.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/components/Message.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/components/Loader.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/reducer/cartReducers.js",["160"],"import { CART_ADD_ITEM,CART_REMOVE_ITEM ,CART_SAVE_PAYMENT_METHOD,CART_SAVE_SHIPPING_ADDRESS} from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [] ,shippingAddress:{}}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n      case CART_REMOVE_ITEM:\n        return{\n          ...state,\n          cartItems: state.cartItems.filter(x => x.product !=action.payload)\n        }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n        return{\n          ...state,\n          shippingAddress: action.payload,\n        }\n\n        case CART_SAVE_PAYMENT_METHOD:\n          return{\n            ...state,\n            paymentMethod: action.payload,\n          }\n    default:\n      return state\n  }\n}\n","/home/ashish/Desktop/PROSHOP/frontend/src/actions/cartActions.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/screens/CartScreen.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/constants/cartConstants.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/constants/userConstants.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/screens/LoginScreeen.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/components/FormContainer.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/actions/userActions.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/screens/RegisterScreen.js",["161"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { register } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    //Dispatch register\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","/home/ashish/Desktop/PROSHOP/frontend/src/reducer/userReducer.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/screens/ProfileScreen.js",["162","163"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { SUCCESS } = userUpdateProfile\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [history, dispatch, userInfo, user, SUCCESS])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    //Dispatch register\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      //dispacth update profile\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {SUCCESS && <Message variant='success'>Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Confirm password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}></Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","/home/ashish/Desktop/PROSHOP/frontend/src/screens/ShippingScreen.js",["164"],"import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport {saveShippingAddress} from '../actions/cartActions'\nimport  CheckoutSteps from '../components/CheckoutSteps'\n\nconst ShippingScreen = ({ history }) => {\n\n  const cart = useSelector(state =>state.cart)\n  const {shippingAddress} = cart\n\n  const [address, setAddress] = useState('shippingAddress.address')\n  const [city, setCity] = useState('shippingAddress.city')\n  const [postalCode, setPostalCode] = useState('shippingAddress.postalCode')\n  const [country, setCountry] = useState('shippingAddress.country')\n\nconst dispatch = useDispatch();\n\n  const submitHandler = (e)=>{\n      e.preventDefault();\n      dispatch(saveShippingAddress({address,city,postalCode,country}))\n      history.push('/payment');\n    }\n\n\n  return ( \n    <FormContainer>\n    <CheckoutSteps step1 step2/>\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter Address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>city</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal Code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n\n        <Button type='submit' variant='primary'>\n            Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","/home/ashish/Desktop/PROSHOP/frontend/src/components/CheckoutSteps.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/screens/PaymentScreen.js",["165"],"import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress) {\n    history.push('/shipping')\n  }\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n\n            <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","/home/ashish/Desktop/PROSHOP/frontend/src/screens/PlaceOrderScreen.js",["166"],"import React, { useState,useEffect } from 'react'\nimport { Button,Row,Col,ListGroup,Card, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport {Link} from 'react-router-dom'\nimport {createOrder} from '../actions/orderActions'\n\n\nconst PlaceOrderScreen = ({history}) => {\n    const cart = useSelector(state => state.cart);\n    const dispatch = useDispatch()\n  //calculate prices\n\n  const addDecimals = (num) =>{\n      return (Math.round(num*100)/100).toFixed(2)\n  }\n  cart.itemsPrice = cart.cartItems.reduce((acc,item)=>acc+item.price*item.qty,0)\n\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ?0 :100)\n  cart.taxPrice = addDecimals(Number((0.15*cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n      Number(cart.itemsPrice)+\n      Number(cart.shippingPrice)+\n      Number(cart.taxPrice)\n  ).toFixed(2)\n\n const orderCreate = useSelector(state =>state.orderCreate)\n//  console.log(orderCreate)\n const {error,success,order} = orderCreate\n// const {error,order,success} = [1,1,1]\n\n\n useEffect(()=>{\n     if(success){\n         history.push(`/orders/${order._id}`)\n     }\n     // eslint-disable-next-line\n },[history,success])\n\n const placeOrderHandler = ()=>{\n     dispatch(createOrder({\n         orderItems:cart.cartItems,\n         shippingAddress:cart.shippingAddress,\n         paymentMethod:cart.paymentMethod,\n         itemsPrice:cart.itemsPrice,\n         shippingPrice:cart.shippingPrice,\n         taxPrice:cart.taxPrice,\n         totalPrice:cart.totalPrice\n     }))\n }\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4/>\n            <Row>\n                <Col md={8}>\n                   <ListGroup variant='flush'>\n                      <ListGroup.Item>\n                          <h2>Shipping</h2>\n                          <p>\n                              <strong>Address:</strong>\n                              {cart.shippingAddress.address},\n                              {cart.shippingAddress.city},\n                              {cart.shippingAddress.postalCode},\n                              {' '}\n                              {cart.shippingAddress.country}\n                          </p>\n                      </ListGroup.Item>\n\n                      <ListGroup.Item>\n                          <h2>Payment Method</h2>\n                          <strong>Method: </strong>\n                          {cart.paymentMethod}\n                      </ListGroup.Item>\n\n                      <ListGroup.Item>\n                          <h2>Order Items</h2>\n                          {cart.cartItems.length === 0 ? (<Message>Your cart is empty</Message>) : (\n                            <ListGroup variant='flush'>\n                                {cart.cartItems.map((item,index)=>(\n                                    <ListGroup.Item key={index}>\n                                    <Row>\n                                        <Col md={3}>\n                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\n                                        </Col>\n                                        <Col>\n                                            <Link to={`/product/${item.product}`}>{item.name}\n\n                                            </Link>\n\n                                        </Col>\n                                        <Col md={4}>\n                                              {item.qty}*${item.price} = ${item.qty*item.price}\n                                        </Col>\n                                    </Row>\n\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup>\n                          )}\n                      </ListGroup.Item>\n                   </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button type='button' className='btn-block' disabled={cart.cartItems ===0} onClick={placeOrderHandler} >\n                                Proceed To Checkout\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","/home/ashish/Desktop/PROSHOP/frontend/src/reducer/orderReducers.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/constants/orderConstants.js",[],"/home/ashish/Desktop/PROSHOP/frontend/src/actions/orderActions.js",["167"],"import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n} from '../constants/orderConstants'\nimport axios from 'axios'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    console.log('hello')\n    const { data } = await axios.post(`api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n   \n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\nexport const payOrder = (orderId,paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type':'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult, config)\n   \n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","/home/ashish/Desktop/PROSHOP/frontend/src/screens/OrderScreen.js",["168","169","170","171"],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":3,"column":19,"nodeType":"178","messageId":"179","endLine":3,"endColumn":22},{"ruleId":"176","severity":1,"message":"180","line":3,"column":23,"nodeType":"178","messageId":"179","endLine":3,"endColumn":26},{"ruleId":"176","severity":1,"message":"181","line":4,"column":32,"nodeType":"178","messageId":"179","endLine":4,"endColumn":38},{"ruleId":"176","severity":1,"message":"182","line":4,"column":39,"nodeType":"178","messageId":"179","endLine":4,"endColumn":43},{"ruleId":"176","severity":1,"message":"183","line":4,"column":44,"nodeType":"178","messageId":"179","endLine":4,"endColumn":55},{"ruleId":"176","severity":1,"message":"184","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"185","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":19},{"ruleId":"186","severity":1,"message":"187","line":100,"column":52,"nodeType":"188","messageId":"189","endLine":100,"endColumn":54},{"ruleId":"186","severity":1,"message":"190","line":25,"column":60,"nodeType":"188","messageId":"189","endLine":25,"endColumn":62},{"ruleId":"176","severity":1,"message":"191","line":19,"column":20,"nodeType":"178","messageId":"179","endLine":19,"endColumn":25},{"ruleId":"176","severity":1,"message":"192","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"191","line":19,"column":20,"nodeType":"178","messageId":"179","endLine":19,"endColumn":25},{"ruleId":"176","severity":1,"message":"193","line":11,"column":10,"nodeType":"178","messageId":"179","endLine":11,"endColumn":25},{"ruleId":"176","severity":1,"message":"194","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":29},{"ruleId":"176","severity":1,"message":"184","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"195","line":9,"column":3,"nodeType":"178","messageId":"179","endLine":9,"endColumn":18},{"ruleId":"176","severity":1,"message":"181","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":16},{"ruleId":"176","severity":1,"message":"196","line":23,"column":9,"nodeType":"178","messageId":"179","endLine":23,"endColumn":17},{"ruleId":"176","severity":1,"message":"197","line":28,"column":11,"nodeType":"178","messageId":"179","endLine":28,"endColumn":22},{"ruleId":"186","severity":1,"message":"190","line":51,"column":29,"nodeType":"188","messageId":"189","endLine":51,"endColumn":31},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'useState' is defined but never used.","'propTypes' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'error' is assigned a value but never used.","'Link' is defined but never used.","'shippingAddress' is assigned a value but never used.","'saveShippingAddress' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'orderPay' is assigned a value but never used.","'addDecimals' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]